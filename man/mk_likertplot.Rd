% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mk_likertplot.R
\name{mk_likertplot}
\alias{mk_likertplot}
\title{Create a function for making publishable ggplot2 likert plot (a.k.a.,
horizontal diverging bar plot), showing values of a continuous variable by a
2 categorical variables.}
\usage{
mk_likertplot(df)
}
\arguments{
\item{df}{A data frame.}
}
\value{
\code{function(xvar, yvar, fillby, fillby_lvls, yorder = "alphanumeric",
               x_as_pct = FALSE, font_size = 14)}
\itemize{
     \item xvar     :  string, name of a continuous variable for x-axis.
     \item yvar     :  string, name of a categorical variable for y-axis.
     \item fillby   :  string, name of a different categorical variable for
                       sub-dividing and coloring the bars.
     \item fillby_lvls: character vector, levels of fillby variable that the
                        fillby variable should be ordered accordingly.
     \item yorder   :  string, "alphanumeric", "ascend" or "descend". It
                       specifies how categories are ordered on the y-axis.
                       Default = "alphanumeric".
     \item x_as_pct :  logical, if TRUE, format x-axis as %;
                       otherwise, format it as comma. Default is FALSE.
     \item font_size : overall font size. Default = 14. The font size of the
                       axes and legend text is a fraction of this value.
}
}
\description{
\code{mk_likertplot} takes a data frame as input and returns a function for
making likert plots (a.k.a., horizontal diverging bar plots) with any
categorical variable from the data frame on the y-axis and the value of
any continuous variable on the x-axis, with bars colored by a 2nd
categorical fillby variable. The resulting plot can have bars ordered from
top to bottom in alphanumerical, ascending or descending order.
}
\examples{
library(tidyr)
df = ab3 \%>\% gather(opinion, pct, -Country)
lvls = unique(df$opinion)
plt = mk_likertplot(df)
plt("pct", "Country", fillby = "opinion", fillby_lvls = lvls)
plt("pct", "Country", fillby = "opinion", fillby_lvls = lvls, x_as_pct = T) \%>\%
    add_labs(xlab = NULL, title = "Confidence estimates for twelve countries' economy")

library(dplyr)
df = films \%>\% count(mpaa, made_money)
plt = mk_likertplot(df)
plt("n", "mpaa", fillby = "made_money", fillby_lvls = c("no", "yes"))
plt("n", "mpaa", fillby = "made_money", fillby_lvls = c("no", "yes"), yorder = "ascend")
plt("n", "mpaa", fillby = "made_money", fillby_lvls = c("no", "yes"), yorder = "descend")

library(dplyr)
df = data.frame(item = rep(LETTERS[1:5], 4),
                slope = c(rep("North", 10), rep("South", 10)),
                type = rep(c(rep("native", 5), rep("introduced", 5)), 2),
                spp = as.integer(abs(rnorm(20, 5, 2))))
df = df \%>\% mutate(spp = ifelse(type == "introduced", spp+1, spp),
                   sppInv = ifelse(type == "native", spp, spp*-1))

# plot for only North
plt = mk_likertplot(df \%>\% filter(slope == "North"))

# works with both negative and positive values
#     sppInv < 0 when type is "introduced", and > 0 when type is "native"
plt("sppInv", "item", fillby = "type", fillby_lvls = c("introduced", "native"))

# also works with only positive values
#     spp > 0 always
plt("spp", "item", fillby = "type", fillby_lvls = c("introduced", "native"))
}
\seealso{
\code{\link{scale_axis}} for adding different scales to the x-axis.
}
